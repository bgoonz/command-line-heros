var Demandbase = window.Demandbase || {};
!(function (e) {
  "use strict";
  function t(e) {
    var t = this.constructor;
    return this.then(
      function (i) {
        return t.resolve(e()).then(function () {
          return i;
        });
      },
      function (i) {
        return t.resolve(e()).then(function () {
          return t.reject(i);
        });
      }
    );
  }
  function i(e) {
    return new this(function (t, i) {
      function n(e, i) {
        if (i && ("object" == typeof i || "function" == typeof i)) {
          var a = i.then;
          if ("function" == typeof a) {
            a.call(
              i,
              function (t) {
                n(e, t);
              },
              function (i) {
                o[e] = { status: "rejected", reason: i };
                0 == --r && t(o);
              }
            );
            return;
          }
        }
        o[e] = { status: "fulfilled", value: i };
        0 == --r && t(o);
      }
      if (!e || void 0 === e.length)
        return i(
          new TypeError(
            typeof e +
              " " +
              e +
              " is not iterable(cannot read property Symbol(Symbol.iterator))"
          )
        );
      var o = Array.prototype.slice.call(e);
      if (0 === o.length) return t([]);
      for (var r = o.length, a = 0; a < o.length; a++) n(a, o[a]);
    });
  }
  function n(e) {
    return Boolean(e && void 0 !== e.length);
  }
  function o() {}
  function r(e, t) {
    return function () {
      e.apply(t, arguments);
    };
  }
  function a(e) {
    if (!(this instanceof a))
      throw new TypeError("Promises must be constructed via new");
    if ("function" != typeof e) throw new TypeError("not a function");
    this._state = 0;
    this._handled = !1;
    this._value = void 0;
    this._deferreds = [];
    g(e, this);
  }
  function s(e, t) {
    for (; 3 === e._state; ) e = e._value;
    if (0 !== e._state) {
      e._handled = !0;
      a._immediateFn(function () {
        var i = 1 === e._state ? t.onFulfilled : t.onRejected;
        if (null !== i) {
          var n;
          try {
            n = i(e._value);
          } catch (e) {
            u(t.promise, e);
            return;
          }
          l(t.promise, n);
        } else (1 === e._state ? l : u)(t.promise, e._value);
      });
    } else e._deferreds.push(t);
  }
  function l(e, t) {
    try {
      if (t === e)
        throw new TypeError("A promise cannot be resolved with itself.");
      if (t && ("object" == typeof t || "function" == typeof t)) {
        var i = t.then;
        if (t instanceof a) {
          e._state = 3;
          e._value = t;
          c(e);
          return;
        }
        if ("function" == typeof i) {
          g(r(i, t), e);
          return;
        }
      }
      e._state = 1;
      e._value = t;
      c(e);
    } catch (t) {
      u(e, t);
    }
  }
  function u(e, t) {
    e._state = 2;
    e._value = t;
    c(e);
  }
  function c(e) {
    2 === e._state &&
      0 === e._deferreds.length &&
      a._immediateFn(function () {
        e._handled || a._unhandledRejectionFn(e._value);
      });
    for (var t = 0, i = e._deferreds.length; t < i; t++) s(e, e._deferreds[t]);
    e._deferreds = null;
  }
  function d(e, t, i) {
    this.onFulfilled = "function" == typeof e ? e : null;
    this.onRejected = "function" == typeof t ? t : null;
    this.promise = i;
  }
  function g(e, t) {
    var i = !1;
    try {
      e(
        function (e) {
          if (!i) {
            i = !0;
            l(t, e);
          }
        },
        function (e) {
          if (!i) {
            i = !0;
            u(t, e);
          }
        }
      );
    } catch (e) {
      if (i) return;
      i = !0;
      u(t, e);
    }
  }
  var f =
      (this && this.__extends) ||
      (function () {
        var e =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (e, t) {
              e.__proto__ = t;
            }) ||
          function (e, t) {
            for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
          };
        return function (t, i) {
          function n() {
            this.constructor = t;
          }
          e(t, i);
          t.prototype =
            null === i
              ? Object.create(i)
              : ((n.prototype = i.prototype), new n());
        };
      })(),
    p =
      (this && this.__awaiter) ||
      function (e, t, i, n) {
        return new (i || (i = a))(function (o, r) {
          function a(e) {
            try {
              l(n.next(e));
            } catch (e) {
              r(e);
            }
          }
          function s(e) {
            try {
              l(n.throw(e));
            } catch (e) {
              r(e);
            }
          }
          function l(e) {
            e.done
              ? o(e.value)
              : new i(function (t) {
                  t(e.value);
                }).then(a, s);
          }
          l((n = n.apply(e, t || [])).next());
        });
      },
    m =
      (this && this.__generator) ||
      function (e, t) {
        function i(e) {
          return function (t) {
            return n([e, t]);
          };
        }
        function n(i) {
          if (o) throw new TypeError("Generator is already executing.");
          for (; l; )
            try {
              if (
                ((o = 1),
                r &&
                  (a =
                    2 & i[0]
                      ? r.return
                      : i[0]
                      ? r.throw || ((a = r.return) && a.call(r), 0)
                      : r.next) &&
                  !(a = a.call(r, i[1])).done)
              )
                return a;
              ((r = 0), a) && (i = [2 & i[0], a.value]);
              switch (i[0]) {
                case 0:
                case 1:
                  a = i;
                  break;
                case 4:
                  l.label++;
                  return { value: i[1], done: !1 };
                case 5:
                  l.label++;
                  r = i[1];
                  i = [0];
                  continue;
                case 7:
                  i = l.ops.pop();
                  l.trys.pop();
                  continue;
                default:
                  if (
                    !((a = l.trys), (a = a.length > 0 && a[a.length - 1])) &&
                    (6 === i[0] || 2 === i[0])
                  ) {
                    l = 0;
                    continue;
                  }
                  if (3 === i[0] && (!a || (i[1] > a[0] && i[1] < a[3]))) {
                    l.label = i[1];
                    break;
                  }
                  if (6 === i[0] && l.label < a[1]) {
                    l.label = a[1];
                    a = i;
                    break;
                  }
                  if (a && l.label < a[2]) {
                    l.label = a[2];
                    l.ops.push(i);
                    break;
                  }
                  a[2] && l.ops.pop();
                  l.trys.pop();
                  continue;
              }
              i = t.call(e, l);
            } catch (e) {
              i = [6, e];
              r = 0;
            } finally {
              o = a = 0;
            }
          if (5 & i[0]) throw i[1];
          return { value: i[0] ? i[1] : void 0, done: !0 };
        }
        var o,
          r,
          a,
          s,
          l = {
            label: 0,
            sent: function () {
              if (1 & a[0]) throw a[1];
              return a[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (s = { next: i(0), throw: i(1), return: i(2) }),
          "function" == typeof Symbol &&
            (s[Symbol.iterator] = function () {
              return this;
            }),
          s
        );
      },
    h = setTimeout;
  a.prototype.catch = function (e) {
    return this.then(null, e);
  };
  a.prototype.then = function (e, t) {
    var i = new this.constructor(o);
    s(this, new d(e, t, i));
    return i;
  };
  a.prototype.finally = t;
  a.all = function (e) {
    return new a(function (t, i) {
      function o(e, n) {
        try {
          if (n && ("object" == typeof n || "function" == typeof n)) {
            var s = n.then;
            if ("function" == typeof s) {
              s.call(
                n,
                function (t) {
                  o(e, t);
                },
                i
              );
              return;
            }
          }
          r[e] = n;
          0 == --a && t(r);
        } catch (e) {
          i(e);
        }
      }
      if (!n(e)) return i(new TypeError("Promise.all accepts an array"));
      var r = Array.prototype.slice.call(e);
      if (0 === r.length) return t([]);
      for (var a = r.length, s = 0; s < r.length; s++) o(s, r[s]);
    });
  };
  a.allSettled = i;
  a.resolve = function (e) {
    return e && "object" == typeof e && e.constructor === a
      ? e
      : new a(function (t) {
          t(e);
        });
  };
  a.reject = function (e) {
    return new a(function (t, i) {
      i(e);
    });
  };
  a.race = function (e) {
    return new a(function (t, i) {
      if (!n(e)) return i(new TypeError("Promise.race accepts an array"));
      for (var o = 0, r = e.length; o < r; o++) a.resolve(e[o]).then(t, i);
    });
  };
  a._immediateFn =
    ("function" == typeof setImmediate &&
      function (e) {
        setImmediate(e);
      }) ||
    function (e) {
      h(e, 0);
    };
  a._unhandledRejectionFn = function (e) {
    "undefined" != typeof console &&
      console &&
      console.warn("Possible Unhandled Promise Rejection:", e);
  };
  var e;
  !(function (e) {
    !(function (t) {
      t.ads = window.Demandbase.Config.ads || {};
      t.analytics = window.Demandbase.Config.analytics || {};
      t.conditions = window.Demandbase.Config.conditions || {};
      t.content = window.Demandbase.Config.content || {};
      t.forms = window.Demandbase.Config.forms || {};
      t.segments = window.Demandbase.Config.segments || {};
      t.emptyWatchDefault = window.Demandbase.Config.emptyWatchDefault || null;
      t.hooks = window.Demandbase.Config.hooks || {};
      t.isInIFrame = window.Demandbase.Config.isInIFrame || null;
      t.key = window.Demandbase.Config.key || null;
      t.logging = window.Demandbase.Config.logging || null;
      t.nonCompanyDefault = window.Demandbase.Config.nonCompanyDefault || null;
      t.nonWatchDefault = window.Demandbase.Config.nonWatchDefault || null;
      t.testDomain = window.Demandbase.Config.testDomain || void 0;
      t.testIp = window.Demandbase.Config.testIp || void 0;
      t.tokens = window.Demandbase.Config.tokens || {};
      t.useTestDomain = window.Demandbase.Config.useTestDomain || !1;
      t.useTestIp = window.Demandbase.Config.useTestIp || !1;
      t.Advertising = window.Demandbase.Config.Advertising || {};
      t.AssetReporter = window.Demandbase.Config.AssetReporter || {};
      t.Content = window.Demandbase.Config.Content || {};
      t.ErrorReporter = window.Demandbase.Config.ErrorReporter || {};
      t.Forms = window.Demandbase.Config.Forms || {};
      t.Google_Analytics = window.Demandbase.Config.Google_Analytics || {};
      t.Google_TagManager = window.Demandbase.Config.Google_TagManager || {};
      t.IpApiModule = e.Config.IpApiModule || {};
      t.SiteOptimization = window.Demandbase.Config.SiteOptimization || {};
      t.EmailDomainReporter =
        window.Demandbase.Config.EmailDomainReporter || {};
      t.isVoltronEnabled = window.Demandbase.Config.isVoltronEnabled || !0;
      t.SiteCustomization = window.Demandbase.Config.SiteCustomization || {
        experiences: {},
      };
    })(e.Config || (e.Config = {}));
    e.Connectors || (e.Connectors = {});
  })(e || (e = {}));
  var e;
  !(function (e) {
    e.version = "9.0.7";
  })(e || (e = {}));
  var e;
  !(function (e) {
    !(function (t) {
      !(function (t) {
        function i(e) {
          return void 0 !== e.stacktrace || void 0 !== e["opera#sourceloc"]
            ? this.parseOpera(e)
            : e.stack && e.stack.match(g)
            ? this.parseV8OrIE(e)
            : e.stack
            ? this.parseFFOrSafari(e)
            : void 0;
        }
        function n(t) {
          if (-1 === e.Shims.indexOf(t, ":")) return [t];
          var i = /(.+?)(?:\:(\d+))?(?:\:(\d+))?$/,
            n = i.exec(t.replace(/[\(\)]/g, ""));
          return [n[1], n[2] || void 0, n[3] || void 0];
        }
        function o(e, t) {
          void 0 === t && (t = 10);
          if (e) return parseInt(e, t);
        }
        function r(t) {
          return t.stack
            .split("\n")
            .filter(function (e) {
              return !!e.match(g);
            }, this)
            .map(function (t) {
              e.Shims.indexOf(t, "(eval ") > -1 &&
                (t = t
                  .replace(/eval code/g, "eval")
                  .replace(/(\(eval at [^\()]*)|(\)\,.*$)/g, ""));
              var i = t
                  .replace(/^\s+/, "")
                  .replace(/\(eval code/g, "(")
                  .split(/\s+/)
                  .slice(1),
                n = this.extractLocation(i.pop());
              return {
                function: i.join(" ") || void 0,
                file:
                  e.Shims.indexOf(["eval", "<anonymous>"], n[0]) > -1
                    ? void 0
                    : n[0],
                line: this._parseInt(n[1]),
                column: this._parseInt(n[2]),
              };
            }, this);
        }
        function a(t) {
          return t.stack
            .split("\n")
            .filter(function (e) {
              return !e.match(f);
            }, this)
            .map(function (t) {
              e.Shims.indexOf(t, " > eval") > -1 &&
                (t = t.replace(
                  / line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g,
                  ":$1"
                ));
              if (
                -1 === e.Shims.indexOf(t, "@") &&
                -1 === e.Shims.indexOf(t, ":")
              )
                return { function: t };
              var i = t.split("@"),
                n = this.extractLocation(i.pop());
              return {
                function: i.join("@") || void 0,
                file: n[0],
                line: this._parseInt(n[1]),
                column: this._parseInt(n[2]),
              };
            }, this);
        }
        function s(t) {
          return !t.stacktrace ||
            (e.Shims.indexOf(t.message, "\n") > -1 &&
              t.message.split("\n").length > t.stacktrace.split("\n").length)
            ? this.parseOpera9(t)
            : t.stack
            ? this.parseOpera11(t)
            : this.parseOpera10(t);
        }
        function l(e) {
          for (
            var t = /Line (\d+).*script (?:in )?(\S+)/i,
              i = e.message.split("\n"),
              n = [],
              o = 2,
              r = i.length;
            o < r;
            o += 2
          ) {
            var a = t.exec(i[o]);
            a && n.push({ file: a[2], line: this._parseInt(a[1]) });
          }
          return n;
        }
        function u(e) {
          for (
            var t =
                /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,
              i = e.stacktrace.split("\n"),
              n = [],
              o = 0,
              r = i.length;
            o < r;
            o += 2
          ) {
            var a = t.exec(i[o]);
            a &&
              n.push({
                function: a[3] || void 0,
                file: a[2],
                line: this._parseInt(a[1]),
              });
          }
          return n;
        }
        function c(e) {
          return e.stack
            .split("\n")
            .filter(function (e) {
              return !!e.match(d) && !e.match(/^Error created at/);
            }, this)
            .map(function (e) {
              var t,
                i = e.split("@"),
                n = this.extractLocation(i.pop()),
                o = i.shift() || "",
                r =
                  o
                    .replace(/<anonymous function(: (\w+))?>/, "$2")
                    .replace(/\([^\)]*\)/g, "") || void 0;
              o.match(/\(([^\)]*)\)/) &&
                (t = o.replace(/^[^\(]+\(([^\)]*)\)$/, "$1"));
              void 0 === t || "[arguments not available]" === t || t.split(",");
              return {
                function: r,
                file: n[0],
                line: this._parseInt(n[1]),
                column: this._parseInt(n[2]),
              };
            }, this);
        }
        var d = /(^|@)\S+\:\d+/,
          g = /^\s*at .*(\S+\:\d+|\(native\))/m,
          f = /^(eval@)?(\[native code\])?$/;
        t.parse = i;
        t.extractLocation = n;
        t._parseInt = o;
        t.parseV8OrIE = r;
        t.parseFFOrSafari = a;
        t.parseOpera = s;
        t.parseOpera9 = l;
        t.parseOpera10 = u;
        t.parseOpera11 = c;
      })(t.ErrorStackParser || (t.ErrorStackParser = {}));
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  var e;
  !(function (e) {
    !(function (e) {
      function t(e, t, i) {
        if (null === e || void 0 === e)
          throw new TypeError("Array.indexOf called on null or undefined");
        return e.indexOf ? e.indexOf(t, i) : r(e, t, i);
      }
      function i() {
        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
        if (Object.assign && "function" == typeof Object.assign)
          return Object.assign.apply(null, e);
        if (null === e[0] || void 0 === e[0])
          throw new TypeError("Cannot convert undefined or null to object");
        return a(e);
      }
      function n(e, t) {
        if (e instanceof RegExp)
          throw new TypeError("First argument must not be a RegExp");
        void 0 === t && (t = 0);
        return -1 !== this.indexOf(e, t);
      }
      function o(e) {
        if (Object.keys) return Object.keys(e);
        if ("function" != typeof e && ("object" != typeof e || null === e))
          throw new TypeError("Object.keys called on non-object");
        return s(e);
      }
      function r(e, t, i) {
        var n = e.length >>> 0,
          o = Math.min(0 | i, n);
        if (o < 0) o = Math.max(0, n + o);
        else if (o >= n) return -1;
        if (void 0 === t) {
          for (; o !== n; ++o) if (void 0 === e[o] && o in e) return o;
        } else if (t !== t) {
          for (; o !== n; ++o) if (e[o] !== e[o]) return o;
        } else for (; o !== n; ++o) if (e[o] === t) return o;
        return -1;
      }
      function a(e) {
        for (var t = Object(e[0]), i = 1; i < e.length; i++) {
          var n = e[i];
          if (null != n)
            for (var o in n)
              Object.prototype.hasOwnProperty.call(n, o) && (t[o] = n[o]);
        }
        return t;
      }
      function s(e) {
        var t,
          i,
          n = Object.prototype.hasOwnProperty,
          o = !{ toString: null }.propertyIsEnumerable("toString"),
          r = [
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "constructor",
          ],
          a = r.length,
          s = [];
        for (t in e) n.call(e, t) && s.push(t);
        if (o) for (i = 0; i < a; i++) n.call(e, r[i]) && s.push(r[i]);
        return s;
      }
      e.console = window.console || {
        log: function () {},
        debug: function () {},
      };
      e.JSON = window.JSON || {
        stringify: function () {},
        parse: function () {},
      };
      e.indexOf = t;
      e.assign = i;
      e.includes = n;
      e.keys = o;
      e._indexOfPolyfill = r;
      e._assignPolyfill = a;
      e._keysPolyfill = s;
    })(e.Shims || (e.Shims = {}));
  })(e || (e = {}));
  var e;
  !(function (e) {
    !(function (t) {
      !(function (i) {
        function n(t) {
          var i = {
            referrer: document.referrer,
            page: document.URL,
            page_title: document.title,
          };
          if (e.Config.isInIFrame)
            try {
              i.page = window.top.document.URL;
              i.referrer = window.top.document.referrer;
              i.page_title = window.top.document.title;
            } catch (e) {
              i.page = document.referrer;
              i.referrer = null;
              i.page_title = "3rd Party iFrame";
            }
          i = e.Shims.assign(i, t);
          return r(i);
        }
        function o(e, i) {
          var o = e || t.Constants.URL_IP_API;
          o += n(i);
          return o;
        }
        function r(e) {
          var t = "?";
          for (var i in e)
            e.hasOwnProperty(i) &&
              void 0 !== e[i] &&
              (t += i + "=" + encodeURIComponent(e[i]) + "&");
          t = t.substring(0, t.length - 1);
          return t;
        }
        i.buildApiParamString = n;
        i.buildApiUrl = o;
        i.buildQueryString = r;
      })(t.Api || (t.Api = {}));
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  !(function (t) {
    t.Demandbase.utils = t.Demandbase.utils || {};
    e.Shims.assign(t.Demandbase.utils, t.Demandbase.utils, {
      buildApiParamString: e.Utilities.Api.buildApiParamString,
      buildApiUrl: e.Utilities.Api.buildApiUrl,
      buildQueryString: e.Utilities.Api.buildQueryString,
    });
  })(window);
  var e;
  !(function (e) {
    !(function (t) {
      !(function (t) {
        function i(i) {
          for (var n = 0; n < t.callbackStack.length; n++)
            !(function (n) {
              var o = t.callbackStack[n];
              e.ErrorReporter.wrap(function () {
                o.call(e, i);
              })();
            })(n);
        }
        function n(t) {
          e.IpApi.CompanyProfile = e.Utilities.flatten(t);
          this.callback(t);
        }
        function o(i) {
          if (-1 === e.Shims.indexOf(t.callbackStack, i)) {
            t.callbackStack.push(i);
            e.IpApi &&
              e.IpApi.CompanyProfile &&
              e.ErrorReporter.wrap(function () {
                i.call(e, e.IpApi.CompanyProfile);
              })();
          }
        }
        t.callbackStack = [];
        t.callback = i;
        t.domScriptCallback = n;
        t.registerCallback = o;
      })(t.Callbacks || (t.Callbacks = {}));
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  !(function (t) {
    t.Demandbase.utils = t.Demandbase.utils || {};
    e.Shims.assign(t.Demandbase.utils, t.Demandbase.utils, {
      callback: e.Utilities.Callbacks.callback.bind(e.Utilities.Callbacks),
      registerCallback: e.Utilities.Callbacks.registerCallback.bind(
        e.Utilities.Callbacks
      ),
    });
  })(window);
  var e;
  !(function (e) {
    !(function (t) {
      !(function (t) {
        t.QS_USE_TEST_DOMAIN = "db_useTestDomain";
        t.QS_QUERY_DOMAIN = "db_domain";
        t.QS_ENABLE_LOG = "db_logging";
        t.QS_PREVIEW_TOKEN = "db_preview_token";
        t.DFLT_NON_COMPANY = "(Non-Company Visitor)";
        t.DFLT_AW_EMPTY = "(AccountWatch Empty)";
        t.DFLT_NON_AW = "(Non-AccountWatch Visitor)";
        t.DFLT_EVENT_TYPE = "click";
        t.URL_IP_API = "api.company-target.com/api/v2/ip.json";
        t.URL_DOMAIN_API = "api.demandbase.com/api/v1/domain.json";
        t.URL_BW_AD_PIXEL =
          e.Config.tokens.URL_BW_AD_PIXEL ||
          "match.prod.bidr.io/cookie-sync/demandbase";
        t.URL_LR_AD_PIXEL =
          e.Config.tokens.URL_LR_AD_PIXEL || "id.rlcdn.com/464526.gif";
        t.MODIFICATION_ERROR = "SCModificationError";
        t.PARDOT_VISITOR_COOKIE_REGEX = /^visitor_id[\d]+$/;
        t.NON_HUMAN_DEVICES = [/adsbot-google/i, /googlebot/i];
        t.URL_CURRENT = (function () {
          var t = document.URL;
          e.Config.isInIFrame && (t = document.referrer);
          t = encodeURIComponent(t);
          return t;
        })();
        t.PROTOCOL = "https://";
      })(t.Constants || (t.Constants = {}));
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  !(function (t) {
    t.Demandbase.utils = t.Demandbase.utils || {};
    e.Shims.assign(t.Demandbase.utils, t.Demandbase.utils, {
      tokens: e.Utilities.Constants,
    });
  })(window);
  var e;
  !(function (e) {
    var t = (function () {
      function t(t) {
        void 0 === t && (t = {});
        this.name = t.name || "";
        this.modify = t.modify || null;
        this.segments = t.segments || [];
        this.url = t.url || [];
        this.modify ||
          (this.modify = function () {
            e.Utilities.Logging.log("DBContent: modify function not defined");
          });
        "string" == typeof this.segments && (this.segments = [this.segments]);
        "string" == typeof this.url && (this.url = [this.url]);
      }
      t.prototype.run = function () {
        var t = !1;
        for (var i in this.url)
          if (this.url.hasOwnProperty(i)) {
            var n = this.url[i];
            e.Utilities.isCurrentPage(n) && (t = !0);
          }
        if (t) {
          var o = !1;
          for (var i in this.segments)
            if (this.segments.hasOwnProperty(i)) {
              var r = this.segments[i],
                a = window.Demandbase.Segments[r];
              void 0 !== a && a && (o = !0);
            }
          if (!o) {
            e.Utilities.Logging.log(
              "DBContent modify " + this.name + " not fired.  Segment " + r
            );
            return !1;
          }
          try {
            e.Utilities.Logging.log(
              "DBContent: running modify function for: " + this.name
            );
            this.modify.call(document);
          } catch (t) {
            t.name = e.Utilities.Constants.MODIFICATION_ERROR;
            throw t;
          }
          return !0;
        }
        e.Utilities.Logging.log(
          "DBContent modify " +
            this.name +
            " not fired. no URL match with: " +
            this.url
        );
        return !1;
      };
      return t;
    })();
    e.DBContent = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    !(function (t) {
      function i(t) {
        if (!t) return !1;
        var i = ["name", "segments", "pages", "modify"];
        if ("function" != typeof t.modify) {
          e.Utilities.Logging.log("DBContentBuilder: invalid type in config.");
          return !1;
        }
        for (var n = 0; n < i.length; n++)
          if (void 0 === t[i[n]]) {
            e.Utilities.Logging.log(
              "DBContentBuilder: invalid config missing: " + i[n]
            );
            return !1;
          }
        return !0;
      }
      function n(t) {
        if (i(t)) {
          "string" == typeof t.pages ? (t.url = [t.pages]) : (t.url = t.pages);
          "string" == typeof t.segments && (t.segments = [t.segments]);
          return new e.DBContent(t);
        }
        return null;
      }
      t.isValid = i;
      t.build = n;
    })(e.DBContentBuilder || (e.DBContentBuilder = {}));
  })(e || (e = {}));
  var e;
  !(function (e) {
    !(function (t) {
      !(function (t) {
        function i(t) {
          var i = !0;
          if (!o(t)) {
            e.Utilities.Logging.log("Event not added.");
            return !1;
          }
          var r = t.type || e.Utilities.Constants.DFLT_EVENT_TYPE,
            a = t.elements,
            s = a.constructor;
          if (s !== HTMLCollection && s !== NodeList)
            return n(t.elements, r, t.listener);
          for (var l in a) {
            var u = !1;
            if (a.hasOwnProperty(l)) {
              u = n(a[l], r, t.listener);
              if (!u) {
                i = !1;
                e.Utilities.Logging.log("Event not added to" + a[l]);
              }
            }
          }
          return i;
        }
        function n(t, i, n) {
          if (!t) {
            e.Utilities.Logging.log(
              "Event not registered - invalid element/s."
            );
            return null;
          }
          t.jquery && (t = t[0]);
          e.Utilities.addEventListener(t, i, n);
          e.Utilities.Logging.log(
            "Event Listener bind to: " + t + " on event " + i
          );
          return !0;
        }
        function o(t) {
          for (
            var i = !1,
              n = ["elements", "listener"],
              o = t.elements || null,
              r = t.listener || null,
              a = 0;
            a < n.length;
            a++
          )
            if (void 0 === t[n[a]] || !t[n[a]]) {
              e.Utilities.Logging.log("Invalid Event object. Missing: " + n[a]);
              return !1;
            }
          if ("function" != typeof r) {
            e.Utilities.Logging.log(
              'Invalid Event: "listener" must be a function. Got (' + r + ")"
            );
            return !1;
          }
          o instanceof Node ||
          o instanceof NodeList ||
          o instanceof HTMLElement ||
          o instanceof HTMLCollection ||
          o instanceof Window ||
          o instanceof Document ||
          "function" == typeof o ||
          (void 0 !== window.Demandbase.jQuery &&
            o instanceof window.Demandbase.jQuery)
            ? (i = !0)
            : e.Utilities.Logging.log(
                "Invalid Event:  element: " +
                  o +
                  ' has type: "' +
                  o.constructor +
                  '" which is not proper instance type.'
              );
          return i;
        }
        t.add = i;
        t._attachListener = n;
        t.isValid = o;
      })(t.Events || (t.Events = {}));
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  !(function (t) {
    t.Demandbase.utils = t.Demandbase.utils || {};
    e.Shims.assign(t.Demandbase.utils, t.Demandbase.utils, {
      events: e.Utilities.Events,
    });
  })(window);
  var e;
  !(function (e) {
    !(function (t) {
      !(function (t) {
        function i(e) {
          n(e);
        }
        function n(t) {
          (e.Config.logging ||
            "true" ===
              e.Utilities.getQueryParam(e.Utilities.Constants.QS_ENABLE_LOG)) &&
            e.Shims.console.log("DB: " + t);
        }
        t.logging = !1;
        t.debug = !1;
        t.alert = i;
        t.log = n;
      })(t.Logging || (t.Logging = {}));
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  !(function (t) {
    t.Demandbase.utils = t.Demandbase.utils || {};
    e.Shims.assign(t.Demandbase.utils, t.Demandbase.utils, {
      logging: e.Utilities.Logging.logging,
      debug: e.Utilities.Logging.debug,
      alert: e.Utilities.Logging.alert.bind(e.Utilities.Logging),
      log: e.Utilities.Logging.log.bind(e.Utilities.Logging),
    });
  })(window);
  var e;
  !(function (e) {
    !(function (t) {
      function i(e, t) {
        var i = {};
        t.cookie.split(";").forEach(function (t) {
          var n = t.split("="),
            o = n[0].trim();
          e.test(o) && n.length > 1 && (i[o] = n[1].trim());
        });
        return i;
      }
      function n(e) {
        return (
          document.getElementById(e) || document.getElementsByName(e)[0] || null
        );
      }
      function o(e, t, i) {
        e.addEventListener
          ? e.addEventListener(t, i)
          : e.attachEvent && e.attachEvent(t, i);
      }
      function r(e) {
        for (var t = [], i = 1; i < arguments.length; i++)
          t[i - 1] = arguments[i];
        for (var n = e, o = 0, r = t; o < r.length; o++) {
          var a = r[o];
          if (void 0 === n) return;
          n = "function" == typeof a ? a(n) : n[a];
        }
        return n;
      }
      function a(e) {
        for (var t in e) {
          var i = e[t];
          if ("object" == typeof i && null !== i && e.hasOwnProperty(t)) {
            for (var n in i) e[t + "_" + n] = i[n];
            delete e[t];
          }
        }
        return e;
      }
      function s(t, i) {
        if (!1 === t[i]) return "false";
        for (
          var n = {
              city: "registry_city",
              state: "registry_state",
              zip: "registry_zip_code",
              country: "registry_country_code",
              country_name: "registry_country",
              latitude: "registry_latitude",
              longitude: "registry_longitude",
            },
            o =
              e.Config.nonCompanyDefault ||
              e.Utilities.Constants.DFLT_NON_COMPANY,
            r =
              e.Config.emptyWatchDefault || e.Utilities.Constants.DFLT_AW_EMPTY,
            a = n[i] || "",
            s = t[i] || t[a] || o,
            l = (t.company_name || o) !== o,
            u = e.Shims.keys(t),
            c = !1,
            d = 0;
          d < u.length;
          d++
        )
          if (0 === e.Shims.indexOf(u[d], "watch_list_")) {
            c = !0;
            break;
          }
        if (-1 !== e.Shims.indexOf(i, "watch_list_") && l) {
          c ||
            (r = e.Config.nonWatchDefault || e.Utilities.Constants.DFLT_NON_AW);
          s = t[i] || r;
        }
        return s;
      }
      function l(e, t) {
        var t = t || window || { location: { search: "", hash: "" } },
          i = {},
          n =
            t.location.search.substring(1) ||
            (t.location.hash && t.location.hash.split("?")[1]);
        if (!n) return "";
        for (var o = n.split("&"), r = 0; r < o.length; r++) {
          var a = o[r].split("="),
            s = a[0],
            l = a[1];
          i[s] = l;
        }
        return i[e] || "";
      }
      function u(t, i, n) {
        void 0 === n && (n = "https://");
        if (t) {
          e._loadedScripts = e._loadedScripts || {};
          if (!e._loadedScripts[t]) {
            e._loadedScripts[t] = !0;
            var o = document.createElement("script"),
              r = document.getElementsByTagName("script")[0];
            o.async = !0;
            o.id = i || "";
            o.src =
              "" + n + t.replace(/(^\/\/)|(^http:\/\/)|(^https:\/\/)/, "");
            r.parentNode.insertBefore(o, r);
          }
        }
      }
      function c() {
        try {
          return e.Shims.indexOf(window.navigator.userAgent, "MSIE ") > 0;
        } catch (e) {
          return !0;
        }
      }
      function d(e) {
        return btoa(
          encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, function (e, t) {
            return String.fromCharCode(parseInt("0x" + t, 16));
          })
        );
      }
      function g(e, t) {
        return e + " has been deprecated since version " + t;
      }
      t.getCookiesByRegex = i;
      t.getElementByIdOrName = n;
      t.addEventListener = o;
      t.dig = r;
      t.flatten = a;
      t.getAttributeValue = s;
      t.getQueryParam = l;
      t.insertScript = u;
      t.isOldBrowserOrUserAgentUnavailable = c;
      t.b64EncodeUnicode = d;
      t.generateDeprecationMessage = g;
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  !(function (t) {
    t.Demandbase.utils = t.Demandbase.utils || {};
    e.Shims.assign(t.Demandbase.utils, t.Demandbase.utils, e.Utilities);
    e.Shims.assign(t.Demandbase.utils, e.utils, {
      loadScript: e.Utilities.insertScript,
      flattenData: e.Utilities.flatten,
      getAttrValue: e.Utilities.getAttributeValue,
    });
  })(window);
  var e;
  !(function (e) {
    !(function (t) {
      function i() {
        return window.top !== window.self;
      }
      function n() {
        return document.readyState;
      }
      function o() {
        try {
          if (window.navigator.cookieEnabled) {
            document.cookie = "COOKIE_TEST=TEST";
            if (-1 !== e.Shims.indexOf(document.cookie, "COOKIE_TEST=TEST")) {
              document.cookie = "COOKIE_TEST=PASSED_TEST";
              return !0;
            }
          }
          return !1;
        } catch (e) {
          return !1;
        }
      }
      function r(t) {
        var i = document.location.href;
        e.Config.isInIFrame && (i = document.referrer);
        t && (i = t);
        return i;
      }
      function a(t, i) {
        function n(t) {
          return 0 === e.Shims.indexOf(t, "//")
            ? t.substring("//".length, t.length)
            : t.replace(/^.*?:\/\//g, "");
        }
        function o(e) {
          return e.replace(/^(www\.)/g, "");
        }
        function a(t) {
          -1 !== e.Shims.indexOf(t, s, t.length - s.length) &&
            (t = t.substring(0, t.length - 1));
          -1 !== e.Shims.indexOf(t, "/", t.length - "/".length) &&
            (t = t.substring(0, t.length - 1));
          return t;
        }
        var s = "#",
          l = document.location.hash,
          u = document.location.search,
          c = r(i);
        if (i) {
          var d = e.Shims.indexOf(i, s);
          -1 === d && (d = i.length);
          l = i.substring(e.Shims.indexOf(i, s), i.length);
          u = i.substring(e.Shims.indexOf(i, "?"), d);
          c = i;
        }
        t = n(t);
        t = o(t);
        t = a(t);
        c = n(c);
        c = o(c);
        c = a(c);
        -1 === e.Shims.indexOf(t, s) &&
          -1 !== e.Shims.indexOf(c, s) &&
          (c = c.substring(0, c.length - l.length));
        -1 === e.Shims.indexOf(t, "?") &&
          -1 !== e.Shims.indexOf(c, "?") &&
          (c = c.substring(0, c.length - u.length));
        c = a(c);
        var g = c === t;
        e.Utilities.Logging.log(
          "utilities.isCurrentPage(): Page check resulted in: " + g
        );
        return g;
      }
      function s(e, t) {
        if (!e) return !1;
        if (e.length <= 0) return !1;
        "^" !== e[0] && (e = "^" + e);
        "$" !== e[e.length - 1] && (e += "$");
        var i = r(t);
        return new RegExp(e).test(i);
      }
      function l(e) {
        try {
          var t = window[e.toString()];
          t.setItem("STORAGE_CHECK", "STORAGE_CHECK");
          t.getItem("STORAGE_CHECK");
          t.removeItem("STORAGE_CHECK");
          return !0;
        } catch (e) {
          return !1;
        }
      }
      function u(e) {
        return e ? "#" + e.replace(/(:|\.|\[|\]|,)/g, "\\$1") : null;
      }
      function c(e, t) {
        for (var i = 0; i < t.length; i++) if (p(e, t[i])) return !0;
        return !1;
      }
      function d(e) {
        return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(
          e
        );
      }
      function g(e) {
        return e.replace(/[.*+?^${}()|[\]\\\/]/g, "\\$&");
      }
      function f(e) {
        for (var t = [], i = 0; i < e.length; i++) t.push(e[i]);
        return t;
      }
      function p(t, i) {
        return !!i && !(i.length > t.length) && -1 !== e.Shims.indexOf(t, i);
      }
      t.detectIFrame = i;
      t.getDocumentReadyState = n;
      t.isCookieEnabled = o;
      t.isCurrentPage = a;
      t.isCurrentPageRegex = s;
      t.isStorageEnabled = l;
      t.jqid = u;
      t.includesAny = c;
      t.isValidEmail = d;
      t.escapeRegExp = g;
      t.nodeListToArray = f;
    })(e.Utilities || (e.Utilities = {}));
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function () {
      function t(e, t, i) {
        this.config = e;
        this.moduleNameToConstructorMap = t;
        this.nameSpace = i;
      }
      t.prototype.build = function () {
        this._parseConfig();
      };
      t.prototype._parseConfig = function () {
        var t = this;
        e.Shims.keys(this.config).forEach(function (i) {
          var n = t._testConfigForKey(i);
          if (n && 3 === n.length) {
            var o = n[1],
              r = t.moduleNameToConstructorMap[o];
            if (t.nameSpace[i]) {
              e.ErrorReporter.send(
                new Error(
                  "Failed to dynamically create configuration for " +
                    i +
                    " due to previously existing configuration with the same name."
                )
              );
              return;
            }
            if (!r) {
              e.ErrorReporter.send(
                new Error(
                  "No constructor available in moduleNameToConstructor map for module: " +
                    o
                )
              );
              return;
            }
            t.nameSpace[i] = new r(t.config[i]);
            t.nameSpace[i].isEnabled() && t.nameSpace[i].initialize();
          }
        });
      };
      t.prototype._testConfigForKey = function (e) {
        return t.REGEX_CUSTOM_MODULE_NAME.exec(e);
      };
      t.REGEX_CUSTOM_MODULE_NAME = /(.*)__(.*)/;
      return t;
    })();
    e.ModuleFactory = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function () {
      function t() {
        this.configuration = {};
      }
      t.prototype.isEnabled = function () {
        return this.configuration.enabled;
      };
      t.prototype.mergeConfigs = function () {
        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
        var n;
        (n = e.Shims).assign.apply(n, [this.configuration].concat(t));
      };
      return t;
    })();
    e.BaseModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.ADVERTISING_PIXEL_ID = "ad";
        n.CONVERSION_PIXEL_ID = "cn";
        n.RETARGETING_PIXEL_ID = "rt";
        n.DEFAULT_CONFIGURATION = {
          enabled: !0,
          key: null,
          reportingOnly: !1,
          enableBW: !0,
          enableLR: !0,
        };
        n.configuration = {};
        n.trackConversion = n.trackConversionListener;
        n.load = n.initialize;
        n.loadPixels = n.insertPixels;
        n._loadPixel = n.insertPixel;
        n._setCampaign = n.loadCampaign;
        n._setEvents = n.registerEvents;
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.Advertising
        );
        t.prototype.mergeConfigs.call(n, i || e.Config.ads);
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        this.insertPixels();
        !0 === this.configuration.reportingOnly &&
          this.configuration.key &&
          this.configuration.key !== e.Config.key &&
          e.IpApiReportingOnly.get(this.configuration.key, !1);
      };
      i.prototype.isConversionPage = function () {
        throw new Error(
          e.Utilities.generateDeprecationMessage(
            "AdvertisingModule.isConversionPage",
            "8.0.0"
          )
        );
      };
      i.prototype.insertPixels = function () {
        if (this.configuration.enableBW) {
          e.Utilities.Logging.log("BW pixel enabled");
          this.insertBWPixel(this.ADVERTISING_PIXEL_ID);
        }
        if (this.configuration.enableLR) {
          e.Utilities.Logging.log("LR pixel enabled");
          this.insertLRPixel(this.ADVERTISING_PIXEL_ID);
        }
      };
      i.prototype.createAndAppendPixel = function (e, t) {
        var i =
            document.getElementsByTagName("body")[0] ||
            document.getElementsByTagName("head")[0],
          n = document.createElement("img");
        n.setAttribute("style", "display:none");
        n.setAttribute("alt", "");
        n.setAttribute("aria-hidden", "true");
        n.setAttribute("width", "0");
        n.setAttribute("height", "0");
        n.id = e;
        n.src = t;
        i.appendChild(n);
      };
      i.prototype.insertBWPixel = function (t) {
        var i = "db_bw_pixel_" + t,
          n =
            e.Utilities.Constants.PROTOCOL +
            e.Utilities.Constants.URL_BW_AD_PIXEL;
        this.createAndAppendPixel(i, n);
      };
      i.prototype.insertLRPixel = function (t) {
        var i = "db_lr_pixel_" + t,
          n =
            e.Utilities.Constants.PROTOCOL +
            e.Utilities.Constants.URL_LR_AD_PIXEL;
        this.createAndAppendPixel(i, n);
      };
      i.prototype.insertPixel = function (t) {
        throw new Error(
          e.Utilities.generateDeprecationMessage(
            "AdvertisingModule.insertPixel",
            "8.0.0"
          )
        );
      };
      i.prototype.loadCampaign = function () {
        throw new Error(
          e.Utilities.generateDeprecationMessage(
            "AdvertisingModule.loadCampaign",
            "8.0.0"
          )
        );
      };
      i.prototype.registerEvents = function () {
        throw new Error(
          e.Utilities.generateDeprecationMessage(
            "AdvertisingModule.registerEvents",
            "8.0.0"
          )
        );
      };
      i.prototype.trackConversionListener = function () {
        throw new Error(
          e.Utilities.generateDeprecationMessage(
            "AdvertisingModule.trackConversionListener",
            "8.0.0"
          )
        );
      };
      i.prototype.virtualPageViewListener = function () {
        throw new Error(
          e.Utilities.generateDeprecationMessage(
            "AdvertisingModule.virtualPageViewListener",
            "8.0.0"
          )
        );
      };
      return i;
    })(e.BaseModule);
    e.AdvertisingModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.DEFAULT_CONFIGURATION = {
          enabled: !0,
          assetList: [
            "api.demandbase.com/autocomplete/widget.js",
            "api.demandbase.com/autocomplete/widget.min.js",
            "autocomplete.demandbase.com/autocomplete/widget.js",
            "autocomplete.demandbase.com/autocomplete/widget.min.js",
            "scripts.demandbase.com/formWidget.js",
            "scripts.demandbase.com/formWidgetDebug.js",
            "scripts.demandbase.com/demandbase-sdk.js",
            "scripts.demandbase.com/demandbase-sdk-debug.js",
            "scripts.demandbase.com/forms.js",
            "scripts.demandbase.com/forms.min.js",
          ],
        };
        n.ERROR_MESSAGE_PREFIX = "Legacy Asset Detected: ";
        n.configuration = {};
        n.values = {};
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.AssetReporter
        );
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        "complete" === e.Utilities.getDocumentReadyState()
          ? this.read()
          : e.Utilities.addEventListener(
              window,
              "load",
              e.ErrorReporter.wrap(this.read.bind(this))
            );
      };
      i.prototype.read = function () {
        for (var t = this.configuration.assetList.length, i = 0; i < t; i++) {
          var n = this.configuration.assetList[i];
          if (
            document.querySelector(
              "script[src='" + e.Utilities.Constants.PROTOCOL + n + "']"
            )
          ) {
            this.values[n] = !0;
            this.send(n);
          } else this.values[n] = !1;
        }
      };
      i.prototype.send = function (t) {
        var i = new Error(this.ERROR_MESSAGE_PREFIX + t);
        e.ErrorReporter.send(i);
      };
      return i;
    })(e.BaseModule);
    e.AssetReporterModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.DEFAULT_CONFIGURATION = { enabled: !0 };
        n.configuration = {};
        n.mods = {};
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.Content
        );
        e.Shims.assign(n.configuration, i || e.Config.content);
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        e.Utilities.Callbacks.registerCallback(this.callback.bind(this));
        this.setup();
      };
      i.prototype.callback = function () {
        this.setup();
        this.modify();
      };
      i.prototype.setup = function () {
        if (void 0 !== e.Config.content)
          for (var t in e.Config.content) {
            var i = e.Config.content[t],
              n = window.Demandbase.DBContentBuilder.build(i);
            n && (this.mods[n.name] = n);
          }
      };
      i.prototype.modify = function () {
        var t = this;
        return e.ErrorReporter.wrap(function () {
          for (var e in t.mods)
            if (t.mods.hasOwnProperty(e)) {
              var i = t.mods[e],
                n = i.run();
              n && !0;
            }
        })();
      };
      return i;
    })(e.BaseModule);
    e.ContentModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.DEFAULT_CONFIGURATION = {
          enabled: !0,
          fireOnLoad: !1,
          formInputSelectors: ['input[type="text"]', 'input[type="email"]'],
          inputSearchTerms: ["email", "user", "login"],
        };
        n.configuration = {};
        n.baseUrl = "https://segments.company-target.com";
        n.activeSetTimeout = 0;
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.EmailDomainReporter
        );
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        this.configuration.fireOnLoad && this.sendDataIfAlreadyPresent();
        this.attachListenersIfDocumentReady();
      };
      i.prototype.sendDataIfAlreadyPresent = function () {
        var t = this,
          i = this.suspectedEmailInputs();
        i.length < 1 ||
          i.forEach(function (i) {
            var n = i.value;
            if (e.Utilities.isValidEmail(n)) {
              var o = n.split("@")[1].toLowerCase();
              t.send(o);
            }
          });
      };
      i.prototype.attachListenersIfDocumentReady = function () {
        var t = this;
        "loading" !== e.Utilities.getDocumentReadyState()
          ? this.suspectedEmailInputs().forEach(function (i) {
              i.addEventListener("input", function () {
                var n = i.value;
                if (e.Utilities.isValidEmail(n)) {
                  var o = n.split("@")[1].toLowerCase();
                  window.clearTimeout(t.activeSetTimeout);
                  t.activeSetTimeout = window.setTimeout(function () {
                    t.send(o);
                  }, 400);
                }
              });
            })
          : document.addEventListener(
              "DOMContentLoaded",
              this.attachListenersIfDocumentReady.bind(this)
            );
      };
      i.prototype.suspectedEmailInputs = function () {
        var t = this;
        return e.Utilities.nodeListToArray(
          document.querySelectorAll(
            this.configuration.formInputSelectors.join(",")
          )
        )
          .map(function (e) {
            return e;
          })
          .filter(function (i) {
            var n = i.name.toLowerCase(),
              o = i.id.toLowerCase(),
              r = t.configuration.inputSearchTerms;
            return (
              !!e.Utilities.includesAny(n, r) || !!e.Utilities.includesAny(o, r)
            );
          });
      };
      i.prototype.send = function (t) {
        var i;
        window.XMLHttpRequest
          ? (i = new XMLHttpRequest())
          : window.ActiveXObject &&
            (i = new ActiveXObject("Microsoft.XMLHTTP"));
        var n =
            e.Config.key ||
            e.Utilities.dig(e.Config, "analytics", "key") ||
            e.Utilities.dig(e.Config, "ads", "key") ||
            e.Utilities.dig(e.Config, "forms", "key") ||
            "",
          o = e.Utilities.b64EncodeUnicode(
            "vendor=mariposa&p1=" + t + "&token=" + n
          ),
          r = this.baseUrl + "/l/" + o;
        try {
          i.open("GET", r);
          i.withCredentials = !0;
          i.setRequestHeader("Content-type", "application/json");
          i.send();
        } catch (e) {
          throw e;
        }
      };
      i.prototype.responseHandler = function (e) {};
      return i;
    })(e.BaseModule);
    e.EmailDomainReporterModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.VERSION = "0.0.0";
        n.PROJECT_ID = "141580";
        n.PROJECT_KEY = "9a0a3519e930259f5886a7af53b0ccaa";
        n.SENTRY_PROJECT_ID = "1190150";
        n.SENTRY_PUBLIC_KEY = "3c9d467f8a9d4295b0f8320ae852091d";
        n.DEFAULT_CONFIGURATION = {
          environment: "production",
          ignorableErrors: [],
        };
        n.configuration = {};
        n.additionalErrorDetails = {};
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.ErrorReporter
        );
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {};
      i.prototype.send = function (t) {
        if (
          !(
            e.Shims.indexOf(this.configuration.ignorableErrors, t.name) > -1 ||
            e.Shims.indexOf(this.configuration.ignorableErrors, t.message) > -1
          )
        ) {
          var i;
          window.XMLHttpRequest
            ? (i = new XMLHttpRequest())
            : window.ActiveXObject &&
              (i = new ActiveXObject("Microsoft.XMLHTTP"));
          var n =
            "https://sentry.io/api/" +
            this.SENTRY_PROJECT_ID +
            "/store/?sentry_version=7&sentry_key=" +
            this.SENTRY_PUBLIC_KEY;
          try {
            i.open("POST", n, !0);
            i.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
            i.send(this.formatMessage(t, !0));
          } catch (e) {}
        }
      };
      i.prototype.wrap = function (t) {
        var i = this;
        if ("function" != typeof t) throw new Error("Invalid Function: " + t);
        return function () {
          for (var n = [], o = 0; o < arguments.length; o++)
            n[o] = arguments[o];
          try {
            if (void 0 !== t && "function" == typeof t.apply)
              return t.apply(i, n);
          } catch (t) {
            i.send(t);
            e.Utilities.Logging.alert("Error: " + t + "\n" + t.stack);
          }
        };
      };
      i.prototype.formatMessage = function (t, i) {
        void 0 === i && (i = !1);
        var n = this.parseError(t),
          o = this.parseContext(),
          r = this.parseEnviroment(),
          a = this.parseSession(),
          s = this.parseParams(),
          l = this.additionalErrorDetails;
        if (i) {
          var u = this.formatErrorForSentry(n);
          return e.Shims.JSON.stringify({
            logger: o.notifier.name,
            platform: "javascript",
            release: o.version,
            environment: o.environment,
            request: { url: o.url },
            contexts: { browser: { userAgent: o.userAgent } },
            tags: { clientId: r.config.clientId },
            extra: {
              readyState: o.readyState,
              config: r.config,
              companyProfile: a,
              additionalErrorDetails: l,
            },
            exception: { values: [u] },
          });
        }
        return e.Shims.JSON.stringify({
          errors: [n],
          context: o,
          environment: r,
          session: a,
          params: s,
        });
      };
      i.prototype.formatErrorForSentry = function (e) {
        for (var t = [], i = 0, n = e.backtrace; i < n.length; i++) {
          var o = n[i];
          t.push({
            function: o.function,
            filename: o.file,
            lineno: o.line,
            colno: o.column,
          });
        }
        return { type: e.type, value: e.message, stacktrace: { frames: t } };
      };
      i.prototype.parseError = function (t) {
        return {
          type: t.name,
          message: t.message,
          backtrace: e.Utilities.ErrorStackParser.parse(t),
        };
      };
      i.prototype.parseContext = function () {
        return {
          notifier: { name: "ErrorReporterModule", version: this.VERSION },
          environment: this.configuration.environment,
          version: e.version,
          url: window.location.href,
          userAgent: navigator.userAgent,
          rootDirectory: window.location.origin,
          readyState: document.readyState,
        };
      };
      i.prototype.parseEnviroment = function () {
        return { config: e.Utilities.dig(e, "Config") };
      };
      i.prototype.parseSession = function () {
        return { companyProfile: e.Utilities.dig(e, "IP", "CompanyProfile") };
      };
      i.prototype.parseParams = function () {
        return {};
      };
      return i;
    })(e.BaseModule);
    e.ErrorReporterModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(e) {
        var i = t.call(this) || this;
        i.FORMS_REMOTE_MODULE_URL =
          "tag.demandbase.com/shared/forms_507b626bf6.min.js";
        i.DEFAULT_CONFIGURATION = {
          enabled: void 0,
          emailID: null,
          emailFields: [],
        };
        i.configuration = {};
        i.inserted = !1;
        i.setConfiguration(e);
        return i;
      }
      f(i, t);
      i.prototype.initialize = function () {
        e.Utilities.Callbacks.registerCallback(this.whenReady.bind(this));
      };
      i.prototype.whenReady = function () {
        this.isMktoForms2Installed()
          ? window.MktoForms2.whenReady(
              e.ErrorReporter.wrap(this.load.bind(this))
            )
          : this.load();
      };
      i.prototype.load = function () {
        var t = !1;
        if ("function" == typeof e.Config.isFormPage) {
          t = e.Config.isFormPage();
          this.setConfiguration();
          t = e.Config.isFormPage();
        } else t = this.isFormPage();
        t && !this.inserted && this.insertForms();
      };
      i.prototype.isFormPage = function () {
        var t = this.configuration.emailFields;
        this.configuration.emailID && t.push(this.configuration.emailID);
        for (var i = 0; i < t.length; i++)
          if (e.Utilities.getElementByIdOrName(t[i])) return !0;
        return !1;
      };
      i.prototype.isMktoForms2Installed = function () {
        return (
          void 0 !== window.MktoForms2 && void 0 !== window.MktoForms2.whenReady
        );
      };
      i.prototype.insertForms = function () {
        this.inserted = !0;
        e.Connectors.initWebForm = this.initializeWebForm;
        e.Utilities.insertScript(
          e.FormsLoader.FORMS_REMOTE_MODULE_URL,
          "db_form_module"
        );
      };
      i.prototype.initializeWebForm = function (t) {
        t = t || e.Config.forms || e.Config.Forms || {};
        window.Demandbase.Connectors.WebForm.connect(t);
      };
      i.prototype.setConfiguration = function (i) {
        t.prototype.mergeConfigs.call(
          this,
          this.DEFAULT_CONFIGURATION,
          i || e.Config.Forms
        );
        void 0 === this.configuration.enabled &&
          void 0 !== e.Config.Forms &&
          (this.configuration.enabled = !0);
        t.prototype.mergeConfigs.call(
          this,
          this.DEFAULT_CONFIGURATION,
          i || e.Config.forms
        );
        void 0 === this.configuration.enabled &&
          void 0 !== e.Config.forms &&
          (this.configuration.enabled = !0);
      };
      return i;
    })(e.BaseModule);
    e.FormsLoaderModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.SO_REMOTE_MODULE_URL =
          "https://tag.demandbase.com/shared/siteOptimization_507b626bf6.min.js";
        n.REMOTE_STYLESHEET_URL =
          "https://tag.demandbase.com/shared/siteOptimization_507b626bf6.css";
        n.DEFAULT_CONFIGURATION = {
          additionalClass: null,
          backgroundColorClass: null,
          closedTitle: "Recommended Content",
          companyProfile: null,
          cssFileURL: n.REMOTE_STYLESHEET_URL,
          delay: 0,
          enabled: void 0,
          fadeIn: 0,
          fontColor: null,
          fontName: null,
          googleAnalyticsTrackerName: null,
          isGoogleAnalyticsEnabled: !1,
          isRippleAnimation: !0,
          isSwitchersDots: !0,
          isSwitchersArrows: !1,
          itemBackgroundColor: null,
          mainClass: "defaultBlock",
          openByDefault: !1,
          openTitle: null,
          recommendationApiURL:
            "https://site-optimization-api.company-target.com/recommend/",
          recommendationCompanyName: null,
          recommendationCompanyId: null,
          recommendationKey: null,
          recommendationsProtocol: "forceHTTPS",
          recommendationUrl: window.location.href,
          showCloseButton: !0,
          showCompanyName: !0,
          showFeedbackLink: !1,
          showIndicatorArrows: !0,
          showLogo: !0,
          showLogoWhenClosed: !0,
          showLogoWhenOpen: !1,
          showOnlyOnScroll: !1,
          showTitleWhenClosed: !0,
          showTitleWhenOpen: !0,
          switcherArrowsColor: "#444",
          state: { openedRecommendationBlock: null },
          widgetBackgroundColor: null,
          widgetContainerId: null,
        };
        n.configuration = {};
        n.inserted = !1;
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.SiteOptimization
        );
        n.configuration.recommendationKey = e.Config.key;
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        e.Utilities.Callbacks.registerCallback(this.callback.bind(this));
      };
      i.prototype.callback = function (e) {
        this.configuration.companyProfile = e;
        this.insertSiteOptimization();
      };
      i.prototype.insertSiteOptimization = function () {
        this.inserted = !0;
        e.Utilities.insertScript(
          e.SiteOptimizationLoader.SO_REMOTE_MODULE_URL,
          "db_site_optimization_module"
        );
      };
      return i;
    })(e.BaseModule);
    e.SiteOptimizationLoaderModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.DEFAULT_CONFIGURATION = {
          enabled: !0,
          events: null,
          fieldMap: null,
          googleAnalyticsClassicScope: 2,
          trackerName: null,
          trackerId: null,
        };
        n.configuration = {};
        n.gType = "";
        n._cEvent = n.sendEvent;
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.Google_Analytics
        );
        t.prototype.mergeConfigs.call(n, i || e.Config.analytics);
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        this._detectG();
        this._setTrackerName();
        this.configuration.fieldMap &&
          "{}" !== e.Shims.JSON.stringify(this.configuration.fieldMap) &&
          e.Utilities.Callbacks.registerCallback(this.callback.bind(this));
        this._setEvents();
      };
      i.prototype.sendEvent = function (t, i, n) {
        "ga" === this.gType
          ? this._trackEvent(t, i, n)
          : window.ga(function () {
              e.Connectors.Google_Analytics._sendEvent(t, i, n);
            });
        e.Utilities.Logging.log("Sent Custom Event:" + t + "/" + i + "/" + n);
      };
      i.prototype._setTrackerName = function () {
        var e = this;
        if (!this.configuration.trackerName) {
          var t = void 0 !== window.ga;
          if (
            void 0 !== window._gat &&
            "function" == typeof window._gat._getTrackers
          ) {
            var i = _gat._getTrackers();
            if (void 0 !== i.length && i.length > 0) {
              if (this.configuration.trackerId)
                for (var n = 0; n < i.length; n++)
                  if (i[n]._getName().length > 0) {
                    var o = i[n]._getName();
                    if (
                      i[n]._getAccount() === this.configuration.trackerId &&
                      !this.configuration.trackerName
                    ) {
                      this.configuration.trackerName = o;
                      return;
                    }
                  }
              var r = i[0] || null;
              if (r && "function" == typeof r._getName) {
                var a = r._getName() || null;
                this.configuration.trackerName ||
                  (this.configuration.trackerName = a);
              }
            }
          }
          t &&
            window.ga(function () {
              var t = window.ga.getAll() || [];
              if (e.configuration.trackerId)
                for (var i = 0; i < t.length; i++) {
                  var n = t[i],
                    o = n.get("name");
                  if (n.get("trackingId") === e.configuration.trackerId) {
                    e.configuration.trackerName = o;
                    return;
                  }
                }
              if (void 0 !== t.length && t.length > 0) {
                var n = t[0] || null;
                if (n && "function" == typeof n.get) {
                  var r = n.get("name") || null;
                  e.configuration.trackerName = r;
                }
              }
            });
        }
      };
      i.prototype.callback = function (t) {
        try {
          if (!t) throw new Error("Error - no data passed to callback");
          var i = e.Connectors.Google_Analytics;
          i._detectG();
          i._setTrackerName();
          for (var n in i.configuration.fieldMap)
            if (i.configuration.fieldMap.hasOwnProperty(n)) {
              var o = +n,
                r = i.configuration.fieldMap[n],
                a = e.Utilities.getAttributeValue(t, r);
              i._var(o, r, a.toString());
            }
          i.sendEvent("Demandbase", "API Resolution", "IP API");
        } catch (t) {
          e.Utilities.Logging.log("GA Error: " + t + "\n" + t.stack);
          e.Connectors.Google_Analytics.sendEvent(
            "Demandbase",
            "API Resolution",
            "Callback Error"
          );
        }
      };
      i.prototype._detectG = function () {
        if (window._gaq) {
          this.gType = "ga";
          _gaq.push(["_addDevId", "NE7T9"]);
        } else this.gType = null;
        this._setGaObject();
        try {
          window.ga(function () {
            e.Connectors.Google_Analytics.gType = "ua";
          });
        } catch (t) {
          e.Connectors.Google_Analytics.gType = "ua";
        }
        e.Utilities.Logging.log("Detected Google version: " + this.gType);
      };
      i.prototype._sendEvent = function (e, t, i) {
        var n = this.configuration.trackerName
          ? this.configuration.trackerName + ".send"
          : "send";
        window.ga(n, "event", {
          eventCategory: e,
          eventAction: t,
          eventLabel: i,
          nonInteraction: !0,
        });
      };
      i.prototype._setCustomDimension = function (e, t) {
        var i = this.configuration.trackerName
          ? this.configuration.trackerName + ".set"
          : "set";
        window.ga(i, "dimension" + e, t);
      };
      i.prototype._setCustomVariable = function (e, t, i) {
        var n = this.configuration.trackerName
            ? this.configuration.trackerName + "._setCustomVar"
            : "_setCustomVar",
          o = this.configuration.googleAnalyticsClassicScope || 2;
        window._gaq.push([n, e >> 0, t, i, o]);
      };
      i.prototype._setEvents = function () {
        var t = this.configuration.events || [];
        if (t)
          for (var i in t)
            if (t.hasOwnProperty(i)) {
              var n = t[i];
              if (n.data) {
                var o = n.data.category || "",
                  r = n.data.action || "",
                  a = n.data.label || "";
                void 0 === n.listener && o && r && a
                  ? (n.listener = function () {
                      e.Connectors.Google_Analytics.sendEvent(o, r, a);
                      e.Utilities.Logging.log("Event listener ran");
                    })
                  : (o && r && a) ||
                    e.Utilities.Logging.log(
                      "Need to define a custom listener function or set data with category/action/label"
                    );
              }
              e.Utilities.Events.add(n);
            }
      };
      i.prototype._setGaObject = function () {
        if (void 0 === window.ga) {
          window.ga =
            window.ga ||
            function () {
              (window.ga.q = window.ga.q || []).push(arguments);
            };
          window.ga.l = +new Date();
        }
      };
      i.prototype._trackEvent = function (e, t, i) {
        var n = this.configuration.trackerName
          ? this.configuration.trackerName + "._trackEvent"
          : "_trackEvent";
        window._gaq.push([n, e, t, i, 0, 1]);
      };
      i.prototype._var = function (t, i, n) {
        "ga" === this.gType
          ? this._setCustomVariable(t, i, n)
          : window.ga(function () {
              e.Connectors.Google_Analytics._setCustomDimension(t, n);
            });
        e.Utilities.Logging.log(t + " " + i + " : " + n);
      };
      return i;
    })(e.BaseModule);
    e.BaseGoogle_AnalyticsModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (e) {
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      f(t, e);
      t.prototype.getTrackerInfo = function () {
        var e = [],
          t = [];
        if (
          void 0 !== window._gaq &&
          void 0 !== window._gat &&
          "function" == typeof window._gat._getTrackers
        ) {
          window._gat._getTrackers().forEach(function (t) {
            t._getName().length > 0 &&
              e.push({
                type: "classic",
                trackerId: t._getAccount(),
                name: t._getName(),
              });
          });
        }
        if (void 0 !== window.ga && void 0 !== window.ga.getAll) {
          window.ga.getAll().forEach(function (e) {
            t.push({
              type: "universal",
              trackerId: e.get("trackingId"),
              name: e.get("name"),
            });
          });
        }
        return t.concat(e);
      };
      return t;
    })(e.BaseGoogle_AnalyticsModule);
    e.Google_AnalyticsModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.DEFAULT_CONFIGURATION = { enabled: !0 };
        n.configuration = {};
        t.prototype.mergeConfigs.call(
          n,
          n.DEFAULT_CONFIGURATION,
          i || e.Config.Google_TagManager
        );
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        e.Utilities.Callbacks.registerCallback(this.callback.bind(this));
      };
      i.prototype.callback = function (t) {
        e.Connectors.Google_TagManager.pushToDataLayer(t);
      };
      i.prototype.pushToDataLayer = function (t, i) {
        if (
          !window.google_tag_manager ||
          !window.dataLayer ||
          "function" != typeof dataLayer.push
        )
          return !1;
        var n = i ? "_" + i : "";
        dataLayer.push(t);
        dataLayer.push({ event: "Demandbase_Loaded" + n });
        e.Utilities.Logging.log("Pushed to GTM dataLayer");
        return !0;
      };
      return i;
    })(e.BaseModule);
    e.Google_TagManagerModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function i(i) {
        var n = t.call(this) || this;
        n.TEST_MODE_ENABLED = "db_useTestIp";
        n.TEST_MODE_VALUE = "db_ip";
        n.API_ENDPOINT = "api.company-target.com/api/v2/ip.json";
        n.DEFAULT_CONFIGURATION = {
          apiKey: null,
          baseUrl: n.API_ENDPOINT,
          testModeEnabled: !1,
          testModeValue: null,
          masIntegrations: { pardot: !1 },
          enablePardotPolling: !0,
        };
        n.configuration = {};
        n.initialized = !1;
        n.pollForPardotStart = 0;
        n.pardotMaxPollWindow = 5e3;
        n.key = n.configuration.apiKey;
        n.useTestValue = n.configuration.testModeEnabled;
        n.testValue = n.configuration.testModeValue;
        n.load = n.get;
        n._loadOnce = n.getOnce;
        n.CompanyProfile = void 0;
        n.isCalled = !1;
        n.experiences = {};
        try {
          t.prototype.mergeConfigs.call(
            n,
            n.DEFAULT_CONFIGURATION,
            {
              apiKey:
                e.Config.key ||
                e.Utilities.dig(e.Config, "analytics", "key") ||
                e.Utilities.dig(e.Config, "ads", "key") ||
                e.Utilities.dig(e.Config, "forms", "key"),
              testModeEnabled:
                e.Utilities.getQueryParam(n.TEST_MODE_ENABLED) ||
                e.Config.useTestIp,
              testModeValue:
                e.Utilities.getQueryParam(n.TEST_MODE_VALUE) || e.Config.testIp,
            },
            i || e.Config.IpApiModule
          );
          n.initialized = !0;
        } catch (e) {
          n.initialized = !1;
        }
        return n;
      }
      f(i, t);
      i.prototype.initialize = function () {
        try {
          e.Shims.assign(this.configuration, this.configuration, {
            apiKey:
              e.Config.key ||
              e.Utilities.dig(e.Config, "analytics", "key") ||
              e.Utilities.dig(e.Config, "ads", "key") ||
              e.Utilities.dig(e.Config, "forms", "key"),
            testModeEnabled:
              e.Utilities.getQueryParam(this.TEST_MODE_ENABLED) ||
              e.Config.useTestIp,
            testModeValue:
              e.Utilities.getQueryParam(this.TEST_MODE_VALUE) ||
              e.Config.testIp,
          });
          this.initialized = !0;
        } catch (t) {
          this.initialized = !1;
          e.ErrorReporter.send(t);
        }
      };
      i.prototype.buildIPAPIParameters = function (t) {
        return p(this, void 0, void 0, function () {
          var i, n;
          return m(this, function (o) {
            switch (o.label) {
              case 0:
                i = {
                  query: this.fetchIpAddress(),
                  mas_integrations: void 0,
                  src: "tag",
                };
                return document.interestCohort
                  ? [4, document.interestCohort()]
                  : [3, 2];
              case 1:
                n = o.sent();
                i.cohort_id = n.id;
                i.cohort_version = n.version;
                o.label = 2;
              case 2:
                return e.Config.isVoltronEnabled
                  ? [
                      2,
                      e.Shims.assign(i, {
                        auth: t || this.configuration.apiKey,
                      }),
                    ]
                  : [
                      2,
                      e.Shims.assign(i, {
                        key: t || this.configuration.apiKey,
                      }),
                    ];
            }
          });
        });
      };
      i.prototype.get = function (t, i) {
        void 0 === t && (t = void 0);
        void 0 === i && (i = !0);
        return p(this, void 0, void 0, function () {
          var n,
            o,
            r,
            a,
            s = this;
          return m(this, function (l) {
            switch (l.label) {
              case 0:
                this.initialized || this.initialize();
                window.XMLHttpRequest
                  ? (n = new XMLHttpRequest())
                  : window.ActiveXObject &&
                    (n = new ActiveXObject("Microsoft.XMLHTTP"));
                return n && !e.Utilities.isOldBrowserOrUserAgentUnavailable()
                  ? [3, 2]
                  : [4, this.getByDomScript(t, i)];
              case 1:
                l.sent();
                return [2, e.Utilities.Logging.log("IP API query via DOM tag")];
              case 2:
                return [4, this.buildIPAPIParameters(t)];
              case 3:
                o = l.sent();
                r = e.Utilities.getQueryParam(
                  e.Utilities.Constants.QS_PREVIEW_TOKEN
                );
                r && (o.preview_token = r);
                if (!o.key && !o.auth)
                  return [
                    2,
                    e.Utilities.Logging.log(
                      "IP API query cancelled - check auth key."
                    ),
                  ];
                a =
                  this.configuration.masIntegrations &&
                  this.configuration.masIntegrations.pardot;
                a
                  ? (o.mas_integrations = e.Utilities.b64EncodeUnicode(
                      e.Shims.JSON.stringify({
                        pardot: this.fetchOrPollForPardotCookie() || {},
                      })
                    ))
                  : e.Utilities.Logging.log(
                      "No Pardot integration in config, skipping cookie sync"
                    );
                i &&
                  (n.onreadystatechange = e.ErrorReporter.wrap(function () {
                    s.responseHandler(n);
                  }));
                try {
                  n.open(
                    "GET",
                    "https://" +
                      e.Utilities.Api.buildApiUrl(this.configuration.baseUrl, o)
                  );
                  void 0 !== n.withCredentials && (n.withCredentials = !0);
                  n.send();
                } catch (e) {
                  if (0 !== n.status) throw e;
                  if (!this.isIgnorableDevice())
                    throw new Error("IP API Request Blocked");
                }
                return [2];
            }
          });
        });
      };
      i.prototype.isIgnorableDevice = function () {
        for (var t = 0; t < e.Utilities.Constants.NON_HUMAN_DEVICES.length; t++)
          if (
            e.Utilities.Constants.NON_HUMAN_DEVICES[t].test(
              window.navigator.userAgent
            )
          )
            return !0;
        return !1;
      };
      i.prototype.getByDomScript = function (t, i) {
        void 0 === t && (t = void 0);
        void 0 === i && (i = !0);
        return p(this, void 0, void 0, function () {
          var n, o, r, a;
          return m(this, function (s) {
            switch (s.label) {
              case 0:
                r = (o = e.Shims).assign;
                a = [{}];
                return [4, this.buildIPAPIParameters(t)];
              case 1:
                n = r.apply(
                  o,
                  a.concat([
                    s.sent(),
                    {
                      callback: i
                        ? "Demandbase.Utilities.Callbacks.domScriptCallback"
                        : "",
                    },
                  ])
                );
                if (!n && !n.auth)
                  return [
                    2,
                    e.Utilities.Logging.log(
                      "IP API query cancelled - check auth key."
                    ),
                  ];
                e.Utilities.insertScript(
                  e.Utilities.Api.buildApiUrl(this.configuration.baseUrl, n),
                  "db_ip_api"
                );
                return [2];
            }
          });
        });
      };
      i.prototype.getOnce = function () {
        if (this.isCalled)
          e.Utilities.Logging.log("IP API call halted. Already called.");
        else {
          this.isCalled = !0;
          this.get();
        }
      };
      i.prototype.fetchIpAddress = function () {
        if (this.configuration.testModeEnabled)
          return this.configuration.testModeValue;
      };
      i.prototype.responseHandler = function (t) {
        if (4 === t.readyState && 200 === t.status) {
          var i = t.responseText;
          try {
            var n = e.Shims.JSON.parse(i);
            this.parseResponseForExperiences(n);
            this.CompanyProfile = e.Utilities.flatten(n);
            e.Utilities.Callbacks.callback(this.CompanyProfile);
          } catch (n) {
            e.ErrorReporter.additionalErrorDetails = {
              status: t.status,
              readyState: t.readyState,
              url: t.responseURL,
              body: i,
            };
            throw "string" == typeof i && i
              ? n
              : new Error("responseText should be text and not empty");
          }
        }
      };
      i.prototype.parseResponseForExperiences = function (t) {
        if (t && t.hasOwnProperty("experiences")) {
          e.Utilities.Logging.log(
            "IpAPI.parseResponseForExperiences(): Experiences present in IP API response."
          );
          this.experiences = t.experiences;
        }
        return this.experiences;
      };
      i.prototype.fetchOrPollForPardotCookie = function () {
        if (
          this.configuration.masIntegrations &&
          this.configuration.masIntegrations.pardot
        ) {
          var t = e.Utilities.getCookiesByRegex(
            e.Utilities.Constants.PARDOT_VISITOR_COOKIE_REGEX,
            document
          );
          if ("object" == typeof t && e.Shims.keys(t).length > 0) {
            e.Utilities.Logging.log(
              "Found Pardot cookie, including in API request"
            );
            return t;
          }
          if (
            !1 !==
            (this.configuration.enablePardotPolling &&
              0 === this.pollForPardotStart)
          ) {
            e.Utilities.Logging.log(
              "Pardot cookie not found, initiating polling"
            );
            this.pollForPardotCookie();
          }
        } else
          e.Utilities.Logging.log(
            "No Pardot integration in config, skipping cookie sync"
          );
      };
      i.prototype.pollForPardotCookie = function () {
        var t = this;
        if (0 === this.pollForPardotStart) {
          this.pollForPardotStart = Date.now();
          e.Utilities.Logging.log(
            "Pardot cookie polling started at " + this.pollForPardotStart
          );
        }
        if (Date.now() - this.pollForPardotStart > this.pardotMaxPollWindow)
          e.Utilities.Logging.log(
            "Pardot cookie not found within " + this.pardotMaxPollWindow + " ms"
          );
        else if (this.fetchOrPollForPardotCookie()) {
          e.Utilities.Logging.log(
            "Pardot cookie found, making second API call"
          );
          this.get(void 0, !1);
        } else
          window.setTimeout(function () {
            t.pollForPardotCookie();
          }, 100);
      };
      return i;
    })(e.BaseModule);
    e.IpApiModule = t;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function (t) {
      function n(i) {
        var n = t.call(this) || this;
        n.DEFAULT_CONFIGURATION = { isEnabled: !1, experiences: {} };
        n.SC_QUERY_PARAMETER_FORCE_FIRE = "db_sc_experience_by_id";
        n.configuration = e.Shims.assign({}, n.DEFAULT_CONFIGURATION);
        n.wrappedExperiences = {};
        n.initialized = !1;
        t.prototype.mergeConfigs.call(
          n,
          n.configuration,
          n.DEFAULT_CONFIGURATION,
          e.Config.SiteCustomization,
          i
        );
        return n;
      }
      f(n, t);
      n.prototype.isEnabled = function () {
        return (
          !0 === this.configuration.isEnabled ||
          !0 === this.configuration.enabled
        );
      };
      n.prototype.initialize = function () {
        if (this.isEnabled()) {
          e.Utilities.Logging.log(
            "SiteCustomization.initialize(): Initializing..."
          );
          this.setup();
          e.Utilities.Callbacks.registerCallback(
            this.fireExperienceByQueryParameter.bind(this)
          );
          e.Utilities.Callbacks.registerCallback(this.callback.bind(this));
        } else
          e.Utilities.Logging.log(
            "Site Customization is currently disabled, will not fire."
          );
      };
      n.prototype.callback = function () {
        e.Utilities.Logging.log(
          "SiteCustomization.callback(): Invoked! Setting up SC and firing."
        );
        this.setup();
        this.fireSiteCustomization();
      };
      n.prototype.setup = function (t) {
        if (t || !this.initialized) {
          if (void 0 !== this.configuration.experiences) {
            var n = this.configuration.experiences || {},
              o = e.Shims.keys(n) || [];
            e.Utilities.Logging.log(
              "SiteCustomization.setup(): Wrapping " +
                o.length +
                " experiences for setup"
            );
            for (var r in n) {
              var a = n[r],
                s = new i(a);
              s && (this.wrappedExperiences[s.id] = s);
            }
            this.initialized = !0;
          }
        } else
          e.Utilities.Logging.log(
            "SiteCustomization.setup(): already initilaized! not running setup again."
          );
      };
      n.prototype.fireSiteCustomization = function () {
        var t = this;
        return e.ErrorReporter.wrap(function () {
          var i = e.IpApi.experiences;
          e.Utilities.Logging.log(
            "fireSiteCustomization(): Running for IP API experiences: " +
              JSON.stringify(i)
          );
          if (!i) {
            e.Utilities.Logging.log(
              "fireSiteCustomization(): Error firing SC experience. IP API response does not contain valid experiences."
            );
            return !1;
          }
          for (
            var n = Object.keys(i).map(function (e) {
                return i[e];
              }),
              o = t.sortExperiencesToFire(n),
              r = 0;
            r < o.length;
            r++
          )
            if (t.applyExperience(o[r].id)) return !0;
          return !1;
        })();
      };
      n.prototype.sortExperiencesToFire = function (t) {
        var i = this;
        if (!t || !Array.isArray(t) || 0 === t.length) {
          e.Utilities.Logging.log(
            "sortExperiencesToFire(): No expereinces returned by IP API: " +
              JSON.stringify(t)
          );
          return [];
        }
        t.sort(function (t, n) {
          var o = i.wrappedExperiences[t.id]
              ? i.wrappedExperiences[t.id].priority
              : null,
            r = i.wrappedExperiences[n.id]
              ? i.wrappedExperiences[n.id].priority
              : null;
          (o && r) ||
            e.Utilities.Logging.log(
              "sortExperiencesToFire(): Warning: priority is not defined " +
                o +
                " or " +
                r
            );
          if (o === r || !o || !r) {
            if (!t.updated_at || !n.updated_at) {
              e.Utilities.Logging.log(
                "sortExperiencesToFire(): Warning: updated_at is not defined " +
                  t.updated_at +
                  " or " +
                  n.updated_at
              );
              return 0;
            }
            return (
              new Date(n.updated_at).getTime() -
              new Date(t.updated_at).getTime()
            );
          }
          return r - o;
        });
        return t;
      };
      n.prototype.fireExperienceById = function (t) {
        this.setup();
        e.Utilities.Logging.log(
          "fireExperienceById(): Firing by experience id: " + t
        );
        return this.applyExperience(t, !0);
      };
      n.prototype.fireExperienceByQueryParameter = function () {
        var t = e.Utilities.getQueryParam(this.SC_QUERY_PARAMETER_FORCE_FIRE);
        if (t) {
          e.Utilities.Logging.log(
            "fireExperienceByQueryParameter(): Firing experience id: " +
              t +
              " now"
          );
          this.setup();
          return this.applyExperience(t, !0);
        }
        e.Utilities.Logging.log(
          'fireExperienceByQueryParameter(): Not firing experience id: "' +
            t +
            '" as it is not valid'
        );
        return !1;
      };
      n.prototype.applyExperience = function (t, i) {
        void 0 === i && (i = !1);
        e.Utilities.Logging.log(
          "applyExperience(): Requested to apply Experience ID: " +
            t +
            " with forceRun of " +
            i
        );
        if (t && this.wrappedExperiences.hasOwnProperty(t)) {
          var n = this.wrappedExperiences[t];
          if (n) return i ? n.forceRun() : n.run();
          e.Utilities.Logging.log(
            "applyExperience(): Experience ID: " +
              t +
              " modobj not truthy: " +
              JSON.stringify(n)
          );
          return !1;
        }
        e.Utilities.Logging.log(
          "applyExperience(): Experience ID: " +
            t +
            " not found in " +
            JSON.stringify(this.wrappedExperiences, null, 4)
        );
        return !1;
      };
      return n;
    })(e.BaseModule);
    e.SiteCustomizationModule = t;
    var i = (function () {
      function t(e) {
        this.exp = e;
        this.isEnabled = !1;
        this.priority = null;
        this.id = "";
        this.name = "";
        this.pages = e.pages || [];
        this.pages instanceof Array || (this.pages = [this.pages]);
        this.isEnabled = e.isEnabled || !1;
        this.name = e.name || "";
        this.id = e.id || "";
        this.priority = e.priority || 5e3;
        this.modify = e.modify || function () {};
      }
      t.prototype.forceRun = function () {
        try {
          e.Utilities.Logging.log(
            "Experience.forceRun: running modify function for: " + this.name
          );
          this.modify.call(document);
          return !0;
        } catch (t) {
          t.name = e.Utilities.Constants.MODIFICATION_ERROR;
          throw t;
        }
      };
      t.prototype.run = function () {
        if (!this.isEnabled) {
          e.Utilities.Logging.log(
            "Experience.run(): Experience named: " +
              this.name +
              " is currently disabled, will not fire."
          );
          return !1;
        }
        if (!this.doesPageMatch()) {
          e.Utilities.Logging.log(
            "Experience.run(): SiteCustomization modify " +
              this.name +
              " not fired. no URL match with: " +
              JSON.stringify(this.pages)
          );
          return !1;
        }
        e.Utilities.Logging.log(
          "Experience.run(): Experience named: " +
            this.name +
            " url matched and will run."
        );
        return this.forceRun();
      };
      t.prototype.doesPageMatch = function () {
        e.Utilities.Logging.log(
          "Experience.doesPageMatch(): Experience named: " +
            this.name +
            " checking these URLs: " +
            JSON.stringify(this.pages)
        );
        for (var t = 0; t < this.pages.length; t++)
          if (e.Utilities.isCurrentPage(this.pages[t] || "")) return !0;
        return !1;
      };
      return t;
    })();
    e.Experience = i;
  })(e || (e = {}));
  var e;
  !(function (e) {
    var t = (function () {
      function t() {}
      t._callback = function (t) {
        if (t.domain || t.person) {
          t = t.domain || t.person;
          e.Utilities.flatten(t);
          this.CompanyProfile = t;
        } else
          e.Utilities.Logging.log(
            "Demandbase.Domain: No company profile available for domain: " +
              this.getDomain()
          );
      };
      t.load = function () {
        if ("function" == typeof e.Config.getDomain && void 0 !== this.key) {
          var t = "",
            i = {};
          t = this.useTestValue ? this.testValue : this.getDomain();
          i = {
            key: this.key,
            callback: "Demandbase.Domain._callback",
            query: t,
            src: "tag",
          };
          e.Utilities.Logging.log("Calling Domain API...");
          e.Utilities.insertScript(
            e.Utilities.Api.buildApiUrl(
              e.Utilities.Constants.URL_DOMAIN_API,
              i
            ),
            "db_domain_api"
          );
        } else
          e.Utilities.Logging.log(
            "Domain API query cancelled - check auth key or Config.getDomain"
          );
      };
      t.getDomain = function () {
        if (this.useTestValue) return this.testValue;
        if ("function" == typeof e.Config.getDomain)
          return e.Config.getDomain.call(e.Config);
        e.Utilities.Logging.log("Warning: Config.getDomain fcn not defined.");
        return "getDomain function is not defined";
      };
      t.key =
        e.Utilities.dig(e, "Config", "key") ||
        e.Utilities.dig(e, "Config", "analytics", "key") ||
        e.Utilities.dig(e, "Config", "ads", "key") ||
        e.Utilities.dig(e, "Config", "forms", "key") ||
        "ERR_NO_AUTH_KEY";
      t.CompanyProfile = null;
      t.useTestValue =
        "true" ===
          e.Utilities.getQueryParam(e.Utilities.Constants.QS_USE_TEST_DOMAIN) ||
        e.Config.useTestDomain ||
        !1;
      t.testValue =
        e.Utilities.getQueryParam(e.Utilities.Constants.QS_QUERY_DOMAIN) ||
        e.Config.testDomain ||
        "No Test Domain Set";
      return t;
    })();
    e.Domain = t;
  })(e || (e = {}));
  if (void 0 === window.__db) var y = { segments: null, conditions: null };
  window.Demandbase.DBCondition = function (t, i, n, o, r) {
    this.name = t;
    this.attributeValue = i;
    this.operator = n;
    this.value = o;
    this.attributeName = r;
    this._checkValue = function (t) {
      switch (n) {
        case "equals":
          return this.attributeValue == t;
        case "not equals":
          return this.attributeValue !== t;
        case "contains":
          return -1 !== e.Shims.indexOf(this.attributeValue, t);
        default:
          return !1;
      }
    };
    this.evaluate = function () {
      n = this.operator.toLowerCase();
      n = window.Demandbase.DBCondition.prototype.supportedOperators[n];
      if ("object" == typeof this.value) {
        for (var e in this.value)
          if (!0 === this._checkValue(this.value[e])) return !0;
        return !1;
      }
      return this._checkValue(this.value);
    };
  };
  window.Demandbase.DBCondition.prototype.name = "DBCondition";
  window.Demandbase.DBCondition.prototype.supportedOperators = {
    "=": "equals",
    "==": "equals",
    equal: "equals",
    equals: "equals",
    "!=": "not equals",
    "!==": "not equals",
    "not equal": "not equals",
    "not equals": "not equals",
    contains: "contains",
    contain: "contains",
  };
  window.Demandbase.DBConditionBuilder = {
    isValid: function (e) {
      for (
        var t = [
            "name",
            "attributeValue",
            "operator",
            "value",
            "attributeName",
          ],
          i = 0;
        i < t.length;
        i++
      )
        if (void 0 === e[t[i]]) return !1;
      return !0;
    },
    build: function (e, t) {
      if (e && !e.name) return null;
      if (
        void 0 !== e.constructor.prototype.name &&
        "DBCondition" === e.constructor.prototype.name
      )
        return e;
      e.attributeName || (e.attributeName = e.attribute || "NO_ATTR_SET");
      e.attributeValue = t[e.attribute] || "";
      if (!this.isValid(e)) return null;
      var i = e.name,
        n = e.attributeValue,
        o = e.operator,
        r = e.value,
        a = e.attributeName;
      return new window.Demandbase.DBCondition(i, n, o, r, a);
    },
  };
  var v = function (t, i) {
    this.name = t;
    this.rules = [];
    this.operator = "";
    this.addCondition = function (t) {
      if (
        !(
          (t && t.evaluate) ||
          (void 0 !== t.constructor.prototype.name &&
            "DBCondition" === t.constructor.prototype.name)
        )
      ) {
        var t = window.Demandbase.DBConditionBuilder.build(
          t,
          window.Demandbase.Segments.CompanyProfile
        );
        if (!t) throw new Error("Invalid Condition: " + t.name);
        e.Utilities.Logging.log(
          "DBSegmentBuilder converted condition successfully..."
        );
      }
      this.rules.push(t);
      switch (this.operator || v.prototype.supportedOperators.any) {
        case "and":
          return (this.value = this.value && t.evaluate());
        case "or":
          return (this.value = this.value || t.evaluate());
        default:
          return t.evaluate();
      }
    };
    this.value = this.addCondition(i);
  };
  v.prototype.name = "DBSegment";
  v.prototype.supportedOperators = {
    "&&": "and",
    "&": "and",
    and: "and",
    "||": "or",
    "|": "or",
    or: "or",
    any: "or",
    all: "and",
  };
  window.Demandbase.DBSegmentBuilder = {
    isArray: function (e) {
      return Array.isArray
        ? Array.isArray(e)
        : "[object Array]" === Object.prototype.toString.call(e);
    },
    isValid: function (e) {
      for (var t = ["name", "operator", "rules"], i = 0; i < t.length; i++)
        if (void 0 === e[t[i]]) return !1;
      return !!this.isArray(e.rules);
    },
    build: function (e) {
      if (!this.isValid(e)) return null;
      var t,
        i = e.name,
        n = e.rules[0],
        o = e.operator;
      if (n) {
        t = new v(i, n);
        t.operator =
          v.prototype.supportedOperators[o] ||
          v.prototype.supportedOperators.any;
        if (e.rules.length > 1)
          for (var r = 1; r < e.rules.length; r += 1) {
            var n = e.rules[r];
            if (
              void 0 === n.constructor.prototype.name ||
              "DBCondition" !== n.constructor.prototype.name
            ) {
              var a = window.Demandbase.DBConditionBuilder.build(n, void 0);
              a && (n = a);
            }
            t.addCondition(n);
          }
        return t;
      }
    },
  };
  window.Demandbase.Segments = window.Demandbase.Segments || {
    name: "Demandbase Segments",
    CompanyProfile: null,
    AccountWatchVisitor: !1,
    IsCompany: !1,
    version: "1.2.2",
    _debug: !1,
    _allConditions: [],
    _allSegments: [],
    _isInitialized: !1,
    _setup: function () {
      this._isInitialized && this._reset();
      this.CompanyProfile ||
        (!window.Demandbase.IP && !window.Demandbase.Domain) ||
        (this.CompanyProfile =
          window.Demandbase.IP.CompanyProfile ||
          window.Demandbase.Domain.CompanyProfile ||
          {});
      "Detailed" === this.CompanyProfile.information_level &&
        (this.IsCompany = !0);
      for (var t in this.CompanyProfile)
        this.CompanyProfile.hasOwnProperty(t) &&
          0 === e.Shims.indexOf(t, "watch_list_") &&
          (this.AccountWatchVisitor = !0);
      for (var i in this._allConditions)
        this._allConditions.hasOwnProperty(i) &&
          this._allConditions[i] &&
          (void 0 === this._allConditions[i].constructor.prototype.name ||
            "DBCondition" !==
              this._allConditions[i].constructor.prototype.name) &&
          this.add("condition", this._allConditions[i]);
      for (var n in this._allSegments)
        this._allSegments.hasOwnProperty(n) &&
          this._allSegments[n].name &&
          (void 0 === this._allSegments[n].constructor.prototype.name ||
            "DBSegment" !== this._allSegments[n].constructor.prototype.name) &&
          this.add("segment", this._allSegments[n]);
    },
    _reset: function () {
      this._allConditions = e.Config.conditions || y.conditions || [];
      this._allSegments = e.Config.segments || y.segments || [];
    },
    load: function () {
      e.Utilities.Callbacks.registerCallback(this.init.bind(this));
    },
    init: function (t) {
      window.Demandbase.Segments._debug = e.Utilities.Logging.debug || !1;
      window.Demandbase.Segments._allConditions =
        e.Config.conditions || y.conditions || [];
      window.Demandbase.Segments._allSegments =
        e.Config.segments || y.segments || [];
      var i = window.Demandbase.Segments;
      i.CompanyProfile = t;
      i._setup();
      i._isInitialized = !0;
    },
    getActiveSegments: function () {
      var e = [];
      for (var t in this._allSegments)
        this._allSegments.hasOwnProperty(t) &&
          this._allSegments[t].value &&
          e.push(this._allSegments[t]);
      return e;
    },
    getInactiveSegments: function () {
      var e = [];
      for (var t in this._allSegments)
        this._allSegments.hasOwnProperty(t) &&
          (this._allSegments[t].value || e.push(this._allSegments[t]));
      return e;
    },
    add: function (t, i) {
      if (!t || !i || i == {}) {
        e.Utilities.Logging.log(
          "Demandbase.Segments.add operation failed due to invalid/empty parameters."
        );
        return null;
      }
      if ("condition" === t) {
        for (
          var n = void 0, o = this._allConditions.length, r = 0;
          r < this._allConditions.length;
          r++
        )
          if (this._allConditions[r].name === i.name) {
            o = r;
            break;
          }
        n = window.Demandbase.DBConditionBuilder.build(i, this.CompanyProfile);
        n
          ? (this._allConditions[o] = n)
          : e.Utilities.Logging.log(
              "Invalid Condition (not created) from: " +
                e.Shims.JSON.stringify(i)
            );
        if (void 0 === i.standalone || !1 !== i.standalone) {
          var a = i.name;
          this.add("segment", {
            name: a,
            rules: [a],
            operator: v.prototype.supportedOperators.any,
          });
        }
      } else if ("segment" === t) {
        if ("segment" !== this.isValid(i)) return null;
        for (
          var s = (i.name, void 0),
            l = void 0,
            u = this._allSegments.length,
            c = i.rules || [],
            d = 0;
          d < this._allSegments.length;
          d++
        )
          if (this._allSegments[d].name === i.name) {
            u = d;
            break;
          }
        for (var g = 0; g < c.length; g++) {
          var f = c[g];
          if (!v.prototype.supportedOperators[f]) {
            v.prototype.supportedOperators[f] || (l = this.get("condition", f));
            l
              ? (c[g] = l)
              : e.Utilities.Logging.log(
                  "Segment: " +
                    i +
                    " uses a Condition (" +
                    c[g] +
                    ") that is not defined."
                );
          }
        }
        i.rules = c;
        s = window.Demandbase.DBSegmentBuilder.build(i);
        if (s) {
          this._allSegments[u] = s;
          if (this.hasOwnProperty(s.name)) this[s.name] = s;
          else
            try {
              Object.defineProperty(this, s.name, {
                value: s.value,
                writable: !0,
              });
            } catch (e) {
              window.Demandbase.Segments[s.name] = s.value;
            }
        } else
          e.Utilities.Logging.log(
            "Invalid Segment (not created) from: " + e.Shims.JSON.stringify(i)
          );
      } else
        e.Utilities.Logging.log(
          'Invalid "type" parameter (' +
            t +
            ') passed to "add" function.  Must be "segment" or "condition".'
        );
    },
    get: function (t, i) {
      var n = [];
      1 === arguments.length && (i = t);
      if ("condition" === t) {
        if (
          void 0 !== i.constructor.prototype.name &&
          "DBCondition" === i.constructor.prototype.name
        )
          return i;
        n = this._allConditions;
      } else {
        if (
          void 0 !== i.constructor.prototype.name &&
          "DBSegment" === i.constructor.prototype.name
        )
          return i;
        n = this._allSegments;
      }
      for (var o in n)
        if (this._allConditions[o].name === i) return this._allConditions[o];
      v.prototype.supportedOperators[i] ||
        e.Utilities.Logging.log(
          'No item with type: "' + t + '" found with name: ' + i
        );
      return null;
    },
    isValid: function (t) {
      var i,
        n = ["name", "rules"],
        o = ["name", "attribute", "operator", "value"];
      if (!t) return !1;
      if (
        void 0 !== t.constructor.prototype.name &&
        "DBSegment" === t.constructor.prototype.name
      )
        return "segment";
      if (
        void 0 !== t.constructor.prototype.name &&
        "DBCondition" === t.constructor.prototype.name
      )
        return "condition";
      try {
        if (t.hasOwnProperty("name") && t.hasOwnProperty("rules")) {
          if ("object" == typeof t.rules) return "segment";
        } else
          for (var r in n)
            if (!t.hasOwnProperty(n[r])) {
              e.Utilities.Logging.log(
                'Invalid DBSegment definition.  Missing property:"' + n[r] + '"'
              );
              return !1;
            }
        if (i) return i;
        for (var r in o) {
          if (!t.hasOwnProperty(o[r])) {
            e.Utilities.Logging.log(
              'Invalid DBCondition definition.  Missing property:"' + o[r] + '"'
            );
            return !1;
          }
          i = "condition";
        }
        return i;
      } catch (t) {
        e.ErrorReporter.send(t);
        return !1;
      }
    },
  };
  var e;
  !(function (e) {
    function t(t) {
      if (!e._isInitialized || t) {
        e._isInitialized = !0;
        null == e.Config.isInIFrame &&
          (e.Config.isInIFrame = e.Utilities.detectIFrame());
        e.AssetReporter = new e.AssetReporterModule();
        e.AssetReporter.isEnabled() && e.AssetReporter.initialize();
        e.Advertising = new e.AdvertisingModule();
        e.Ads = e.Advertising;
        if (e.Advertising.isEnabled()) {
          e.IpApiReportingOnly = new e.IpApiModule();
          e.Advertising.initialize();
        }
        e.IpApi = new e.IpApiModule();
        e.IP = e.IpApi;
        e.IpApi.getOnce();
        window.Demandbase.Segments.load();
        e.Config.callback &&
          e.Utilities.Callbacks.registerCallback(e.Config.callback);
        e.FormsLoader = new e.FormsLoaderModule();
        if (e.FormsLoader.isEnabled()) {
          e.FormsLoader.initialize();
          window.Demandbase.utils.loadFormModule = e.FormsLoader.load.bind(
            e.FormsLoader
          );
          window.Demandbase.utils.isFormPage = e.FormsLoader.isFormPage.bind(
            e.FormsLoader
          );
        }
        e.SiteOptimizationLoader = new e.SiteOptimizationLoaderModule();
        e.SiteOptimizationLoader.isEnabled() &&
          e.SiteOptimizationLoader.initialize();
        e.Connectors.Google_Analytics = new e.Google_AnalyticsModule();
        e.Connectors.Google_Analytics.isEnabled() &&
          e.Connectors.Google_Analytics.initialize();
        e.Connectors.Google_TagManager = new e.Google_TagManagerModule();
        e.Connectors.Google_TagManager.isEnabled() &&
          e.Connectors.Google_TagManager.initialize();
        e.Content = new e.ContentModule();
        e.Content.isEnabled() && e.Content.initialize();
        e.SiteCustomization = new e.SiteCustomizationModule();
        e.SiteCustomization.isEnabled() && e.SiteCustomization.initialize();
        if ("function" == typeof e.Config.getDomain) {
          e.Config.getDomain() && e.Domain.load();
        }
        e.EmailDomainReporter = new e.EmailDomainReporterModule();
        e.EmailDomainReporter.isEnabled() && e.EmailDomainReporter.initialize();
        var i = {
          Advertising: e.AdvertisingModule,
          AssetReporter: e.AssetReporterModule,
          Content: e.ContentModule,
          ErrorReporter: e.ErrorReporterModule,
          Google_Analytics: e.Google_AnalyticsModule,
          SiteCustomization: e.SiteCustomization,
        };
        new e.ModuleFactory(e.Config, i, e).build();
        "function" == typeof e.Config.onLoad && e.Config.onLoad.call(e);
      }
    }
    e.initialize = t;
  })(e || (e = {}));
  e.Config.EmailDomainReporter = { enabled: !1 };
  e.Config.forms = {
    companyID: "company",
    emailID: "email",
    fieldMap: { company_name: "company" },
  };
  e.Config.isFormPage = function () {
    return "forms" === e.utils.getQueryParam("testDB") && e.utils.isFormPage();
  };
  e.Config.onLoad = function () {
    e.Config.loadFormModule();
  };
  e.Config.loadFormModule = function () {
    function t() {
      o++;
      if (
        (e.Utilities.getElementByIdOrName("email") &&
          void 0 === e.Connectors.WebForm) ||
        o === n
      ) {
        e.utils.loadFormModule();
        clearTimeout(t);
      } else o < n && setTimeout(t, i);
    }
    var i = 100,
      n = 50,
      o = 0;
    t();
  };
  e.Config.clientId = "X4PVAXm1";
  e.Config.key = "E2OdxBdRqKV8gEY0QLcrVFY82NfUxSrGnP7JcCOq";
  e.Config.Advertising = {
    enableBW: !1,
    enableLR: !1,
    enableIPONWEB: !1,
    pixels: { ad: "1395249215", rt: "1395249326", cn: null },
  };
  e.ErrorReporter = new e.ErrorReporterModule();
  e.ErrorReporter.initialize();
  e.ErrorReporter.wrap(e.initialize.bind(e))();
})(window.Demandbase);
//# sourceMappingURL=X4PVAXm1.min.js.map
